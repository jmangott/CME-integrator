"""PySB model for the lambda phage example."""
import matplotlib.pyplot as plt
import numpy as np
from pysb import *
from pysb.macros import *
from pysb.integrate import odesolve

Model()

Monomer('A0')
Monomer('B0')
Monomer('A1')
Monomer('B1')
Monomer('A2')
Monomer('B2')
Monomer('A3')
Monomer('B3')

Parameter('b', 0.4)
Parameter('c', 0.05)
Parameter('dA', 0.01)
Parameter('dB', 0.01)

Observable('xA0', A0)
Observable('xB0', B0)
Observable('xA1', A1)
Observable('xB1', B1)
Observable('xA2', A2)
Observable('xB2', B2)
Observable('xA3', A3)
Observable('xB3', B3)


# Compartment 0
Expression('alpha0', c)
Expression('alpha1', c)
Expression('alpha2', b / (b + xB0))
Expression('alpha3', b / (b + xA0))
Expression('alpha4', dA)
Expression('alpha5', dB)
Rule('rule0', A0() >> None, alpha0)
Rule('rule1', B0() >> None, alpha1)
Rule('rule2', None >> A0(), alpha2)
Rule('rule3', None >> B0(), alpha3)
Rule('rule4', A0() >> A1(), alpha4)
Rule('rule5', B0() >> B1(), alpha5)

# Compartment 1
Expression('alpha6', c)
Expression('alpha7', c)
Expression('alpha8', b / (b + xB1))
Expression('alpha9', b / (b + xA1))
Expression('alpha10', dA)
Expression('alpha11', dB)
Expression('alpha12', dA)
Expression('alpha13', dB)
Rule('rule6', A1() >> None, alpha6)
Rule('rule7', B1() >> None, alpha7)
Rule('rule8', None >> A1(), alpha8)
Rule('rule9', None >> B1(), alpha9)
Rule('rule10', A1() >> A0(), alpha10)
Rule('rule11', B1() >> B0(), alpha11)
Rule('rule12', A1() >> A2(), alpha12)
Rule('rule13', B1() >> B2(), alpha13)

# Compartment 2
Expression('alpha14', c)
Expression('alpha15', c)
Expression('alpha16', b / (b + xB2))
Expression('alpha17', b / (b + xA2))
Expression('alpha18', dA)
Expression('alpha19', dB)
Expression('alpha20', dA)
Expression('alpha21', dB)
Rule('rule14', A2() >> None, alpha14)
Rule('rule15', B2() >> None, alpha15)
Rule('rule16', None >> A2(), alpha16)
Rule('rule17', None >> B2(), alpha17)
Rule('rule18', A2() >> A1(), alpha18)
Rule('rule19', B2() >> B1(), alpha19)
Rule('rule20', A2() >> A3(), alpha20)
Rule('rule21', B2() >> B3(), alpha21)

# Compartment 3
Expression('alpha22', c)
Expression('alpha23', c)
Expression('alpha24', b / (b + xB3))
Expression('alpha25', b / (b + xA3))
Expression('alpha26', dA)
Expression('alpha27', dB)
Rule('rule22', A3() >> None, alpha22)
Rule('rule23', B3() >> None, alpha23)
Rule('rule24', None >> A3(), alpha24)
Rule('rule25', None >> B3(), alpha25)
Rule('rule26', A3() >> A2(), alpha26)
Rule('rule27', B3() >> B2(), alpha27)

Parameter('xA0_0', 30.0)
Parameter('xB0_0', 5.0)
Parameter('xA1_0', 0.0)
Parameter('xB1_0', 0.0)
Parameter('xA2_0', 0.0)
Parameter('xB2_0', 0.0)
Parameter('xA3_0', 0.0)
Parameter('xB3_0', 0.0)

Initial(A0(), xA0_0)
Initial(B0(), xB0_0)
Initial(A1(), xA1_0)
Initial(B1(), xB1_0)
Initial(A2(), xA2_0)
Initial(B2(), xB2_0)
Initial(A3(), xA3_0)
Initial(B3(), xB3_0)

if __name__ == '__main__':
    tspan = np.linspace(0, 500)
    y = odesolve(model, tspan)
    plt.plot(tspan, y['xA0'], label="$A_0$")
    plt.plot(tspan, y['xB0'], label="$B_0$")
    plt.plot(tspan, y['xA1'], label="$A_1$")
    plt.plot(tspan, y['xB1'], label="$B_1$")
    plt.plot(tspan, y['xA2'], label="$A_2$")
    plt.plot(tspan, y['xB2'], label="$B_2$")
    plt.plot(tspan, y['xA3'], label="$A_3$")
    plt.plot(tspan, y['xB3'], label="$B_3$")
    plt.xlabel('time')
    plt.ylabel('population')
    plt.legend()
    plt.show()